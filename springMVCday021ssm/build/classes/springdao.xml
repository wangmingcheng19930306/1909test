<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
		
	   <!--1.配置包扫描位置  -->
       <context:component-scan  base-package="cn.zj.ssm"/>
       <!--2.读取db.properties配置文件  -->
       <context:property-placeholder location="classpath:db.properties"/>
       <!--3.配置数据源  -->
       <bean id="MyDataSource"  class="com.alibaba.druid.pool.DruidDataSource" >
             <property  name="driverClassName"  value="${jdbc.driverClassName}"/>
             <property  name="url"  value="${jdbc.url}"/>
             <property  name="username" value="${jdbc.username}" />
             <property  name="password" value="${jdbc.password}"/>
             <property  name="maxActive" value="${jdbc.maxActive}"/>
       </bean>	
       
       <!-- ====================================================================================== -->
       <!--
                                 整合mybatis和spring框架步骤：
              1.配置mybatis框架的sqlSessionFactoryBean（它帮你创建工厂对象)
              2.配置MapperScannerConfigurer对象(包扫描)或者配置MapperFactoryBean(单个对象)(帮你创建代理映射对象)
         -->
       <!--1.配置mybatis框架的sqlSessionFactory工厂对象  -->
       <bean  name="MySqlSessionFactory"  class="org.mybatis.spring.SqlSessionFactoryBean">
               <!--(1)注入数据源  -->
               <property name="dataSource"  ref="MyDataSource"/>
               <!--(2)配置别名  -->
               <property name="typeAliasesPackage"  value="cn.zj.ssm.pojo"/>
       </bean>
       <!--2.配置包扫描创建映射接口的代理对象  -->
       <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" >
             <!--(1)配置映射接口对象的包  -->
             <property name="basePackage"  value="cn.zj.ssm.mapper"/>
             <!--(2)配置工厂bean的名称【可选】  -->
             <property name="sqlSessionFactoryBeanName" value="MySqlSessionFactory"/>
       </bean>
       <!--==================================================================================  -->
       <!--
                           事务配置
            1.配置事务管理器(what)
            2.配置事务通知(when)
            3.配置使用Aop将事务切入到Service层(where)
         -->
         <!--1.配置事务管理器(what)  -->
         <bean id="myTransactionManager"  class="org.springframework.jdbc.datasource.DataSourceTransactionManager" >
              <!--(1)注入数据源  -->
              <property  name="dataSource"  ref="MyDataSource"/>
         </bean>
         <!--2.配置事务通知 (when) -->
         <tx:advice  id="txAdvice"  transaction-manager="myTransactionManager">
               <tx:attributes>
                     <!--(1)DQL语句  -->
                     <tx:method name="select*" read-only="true"/>
                     <!--(2)DML语句  -->
                     <tx:method name="*"/>
               </tx:attributes>
        </tx:advice>
        <!--3.使用Aop将事务切入到Service层  -->
        <aop:config>
               <!--(1)配置切面=切入点+通知  -->
                <aop:advisor advice-ref="txAdvice" pointcut="execution(* cn.zj.ssm.service..*.*(..))"/>
        </aop:config>
</beans>
	